import streamlit as st
import joblib
import numpy as np

st.set_page_config(page_title="Previs√£o de Pre√ßo do Petr√≥leo", page_icon="üí°", layout="centered", initial_sidebar_state="auto")

# Carregando modelo
model = joblib.load('modelo_randomforest.pkl')

# Fun√ß√£o para fazer previs√µes com o modelo
def fazer_previsao(preco_passado):

    # Converter a entrada em um formato compat√≠vel com o modelo
    input_data = np.array([[preco_passado]])

    # Fazer a previs√£o usando o modelo carregado
    predicao = model.predict(input_data)
    return predicao[0]


st.title("Tech Challenge - Previs√£o de Pre√ßo do Petr√≥leo - RandomForest")

st.write("""
    Este aplicativo prev√™ o pre√ßo do petr√≥leo no dia seguinte com base no pre√ßo do dia anterior.
    Insira o pre√ßo do dia anterior para obter a previs√£o do pre√ßo.
""")

st.subheader("Insira o Pre√ßo do Dia Anterior")

# Campo para entrada do pre√ßo anterior
preco_passado = float(st.number_input("Pre√ßo do Petr√≥leo no Dia Anterior", min_value=0.0, value=75.00))

# Quando o usu√°rio clicar no bot√£o de previs√£o
if st.button("Prever Pre√ßo"):
    previsao = fazer_previsao(preco_passado)
    
    st.subheader("Resultado da Previs√£o")
    st.write(f"O pre√ßo do petr√≥leo previsto para o pr√≥ximo dia √©: R${previsao:.2f}")

    # Exibi√ß√£o do gr√°fico
    st.subheader("Gr√°fico da Previs√£o")
    st.line_chart([preco_passado, previsao])
    
